name: NPM Install

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      node_version:
        description: "Node.js version for .nvmrc"
        required: false
        default: "v16"
        options:
          - "v16"
          - "v18"
          - "v20"

jobs:
  npm-install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js and NVM
        if: github.event_name == 'workflow_dispatch'
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install ${{ github.event.inputs.node_version }}
        env:
          NODE_VERSION: ${{ github.event.inputs.node_version }}

      - name: Set NVMRC
        if: github.event_name == 'workflow_dispatch'
        id: set-nvmrc
        run: |
          if [ -n "$NVMRC_VALUE" ]; then
            echo "$NVMRC_VALUE" > .nvmrc
            echo "::set-output name=nvmrc_set::true"
          else
            echo "::set-output name=nvmrc_set::false"
          fi
        env:
          NVMRC_VALUE: ${{ github.event.inputs.node_version }}

      - name: Use NVMRC from checked out branch
        if: github.event_name != 'workflow_dispatch'
        id: pass-nvmrc
        run: |
          echo "NVMRC content: $(cat .nvmrc)"
          echo "::set-output name=node_version::$(cat .nvmrc)"

      - name: Setup Node.js
        if: steps.set-nvmrc.outputs.nvmrc_set == 'true' && github.event_name == 'workflow_dispatch'
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.set-nvmrc.outputs.node_version }}

      - name: Setup Node.js from .nvmrc
        if: steps.pass-nvmrc.outputs.node_version != '' && github.event_name != 'workflow_dispatch'
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.pass-nvmrc.outputs.node_version }}

      - name: Run npm ci with the specified Node.js version
        run: npm ci
